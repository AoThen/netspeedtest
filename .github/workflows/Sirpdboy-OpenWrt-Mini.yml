#=================================================
# Description: Build OpenWrt using GitHub Actions
# Author: sirpdboy
# https://github.com/sirpdboy/Openwrt

name: Sirpdboy-OpenWrt-Mini
on:
  push:
    branches: 
      - master
  schedule:
    - cron: 0 20 */2 * *
  watch:
    types: started
env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: afeeds.conf.default
  CONFIG_FILE: miniappdrv.config
  DIY_P1_SH: update_pack.sh
  DIY_P2_SH: update_init.sh
  TD: Asia/Shanghai

jobs:
  Openwrt_Mini_Build:
    runs-on: ubuntu-18.04
    steps:
     - name: Checkout
       uses: actions/checkout@main

     - name: Init Build
       env:
        DEBIAN_FRONTEND: noninteractive
       run: |
          docker rmi `docker images -q`
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo -E apt-get clean
          sudo timedatectl set-timezone "$TD"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir
     - name: Download openwrt
       working-directory: /workdir
       run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

     - name: Update Packages
       run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        cd openwrt
        cp $GITHUB_WORKSPACE/$DIY_P1_SH ./
        /bin/bash ./$DIY_P1_SH
     - name: Download feeds
       run: cd openwrt &&  ./scripts/feeds update -a

     - name: Update config
       run: |
        [ -e files ] && mv files/*.* openwrt
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        ./chmod +x ./$DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

     - name: Install feeds
       run: cd openwrt && ./scripts/feeds install -a 

     - name: Make Download
       run: |
         cd openwrt
         make defconfig
         make -j8 download
         find dl -size -1024c -exec ls -l {} \;
         find dl -size -1024c -exec rm -f {} \;

     - name: Compile Openwrt
       run: |
          cd openwrt
          echo -e "$(nproc) thread build."
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

     - name: Prepare Artifact
       run: |
        mkdir -p ./new/firmware
        mkdir -p ./new/package
        cp -rf $(find ./openwrt/bin/packages/ -type f -name "*.ipk") ./new/package
        find openwrt/bin/targets/ -name "*sysupgrade*bin*" | xargs -i mv -f {} ./new/firmware
        find openwrt/bin/targets/ -name "*combined*img*" | xargs -i mv -f {} ./new/firmware
        cd ./new/firmware
        gzip *.img

     - name: Upload Firmware
       uses: actions/upload-artifact@main
       with:
          name: SirpdboyOpenWrt-mini-Firmware
          path: ./new/firmware
     - name: Upload  IPK
       uses: actions/upload-artifact@main
       with:
          name: SirpdboyOpenWrt-mini-Ipk
          path: ./new/package

     - name: Upload firmware to cowtransfer
       run: |
         curl -fsSL git.io/file-transfer | sh
         ./transfer cow --block 2621440 -s -p 64 --no-progress ./new/firmware 2>&1 | tee cowtransfer.log
         echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
     - name: Upload Firmware wetransfer
       run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ./new/firmware 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
