name: Sirpdboy-OpenWrt-Mini

on:
  repository_dispatch:
  release:
    types: published
#  push:
#    branches:
#      - main
#    paths:
#      - '5.config'
  schedule:
    - cron: 0 21 */3 * * 
  watch:
    types: started

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: afeeds.conf.default
  CONFIG_FILE: miniappdrv.config
  DIY_P1_SH: update_pack.sh
  DIY_P2_SH: update_init.sh
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: 准备工作
      uses: actions/checkout@main

    - name: 搭建编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: 下载固件源码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: 读取feeds配置
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: 下载feeds插件
      run: cd openwrt && ./scripts/feeds update -a

    - name: 安装feeds插件
      run: cd openwrt && ./scripts/feeds install -a

    - name: 自定义固件设置
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: 下载package文档
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile Openwrt
      run: |
          cd openwrt
          echo -e "$(nproc) thread build."
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

    - name: Prepare Artifact
      run: |
        mkdir -p ./new/firmware
        mkdir -p ./new/package
        cp -rf $(find ./openwrt/bin/packages/ -type f -name "*.ipk") ./new/package
        find openwrt/bin/targets/ -name "*sysupgrade*bin*" | xargs -i mv -f {} ./new/firmware
        find openwrt/bin/targets/ -name "*combined*img*" | xargs -i mv -f {} ./new/firmware
        cd ./new/firmware
        gzip *.img

    - name: Upload Firmware
      uses: actions/upload-artifact@main
      with:
          name: SirpdboyOpenWrt-mini-Firmware
          path: ./new/firmware
    - name: Upload  IPK
      uses: actions/upload-artifact@main
      with:
          name: SirpdboyOpenWrt-mini-Ipk
          path: ./new/package

    - name: Upload firmware to cowtransfer
      run: |
         curl -fsSL git.io/file-transfer | sh
         ./transfer cow --block 2621440 -s -p 64 --no-progress ./new/firmware 2>&1 | tee cowtransfer.log
         echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
    - name: Upload Firmware wetransfer
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ./new/firmware 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
